package d12_09_2023.zadatak4;

import java.util.ArrayList;
import java.util.Arrays;

public class ElektricniSporet {
    /*
    Kreirati klasu ElektricniSporet koja ima:
    ‚óè	marku sporeta (npr: Beko, Bosh)
    ‚óè	garanciju kao broj godina
    ‚óè	maksimalan broj ukljucenih ringli u istom trenutku (1, 2, 3  ili 4)
    ‚óè	4 ringle
    ‚óã	gore levo
    ‚óã	gore desno
    ‚óã	dole levo
    ‚óã	dole desno
    ‚óè	konstruktor koji postavlja sve atribute
    ‚óè	gettere za sve atribut
    ‚óè	ne postoje setteri
    ‚óè	metodu pojacaj kojoj se prosledjuje pozicija ringle
    ‚óã	pozicija 1 je ringla gore levo
    ‚óã	pozicija 2 je ringla gore desno
    ‚óã	pozicija 3 je ringla dole levo
    ‚óã	pozicija 4 je ringla dole desno
    ‚óã	Ako se prelazi maksimalan broj ukljucenih ringli u jednom trenutku, pogasite sve ringle sem one koja se pojacava u tom pozivu funkije
    ‚óã	Za gasenje ringli iskoristite metodu koja je definisana ispod üëá
    ‚óè	metodu iskljuci ringlu kojoj se prosledjuje pozicija ringle
    ‚óã	pozicija 1 je ringla gore levo
    ‚óã	pozicija 2 je ringla gore desno
    ‚óã	pozicija 3 je ringla dole levo
    ‚óã	pozicija 4 je ringla dole desno
    ‚óè	metodu koja racuna i vraca ukupnu potrosnju za ceo elektricni sporet, tako sto sabira potrosnju za sve ringle (kao parametar se unosi vreme koliko vec ringle rade)
    ‚óè	metodu koja stampa podatke u formatu:
    marka - garancija u godinama
    Ringle:
    Gore levo:
    Ringla je ukljucena/iskljucena
    Tip ringle: tip ringle
    Jacina: jacina
    Grejac: jacina grejaca kW
    Gore desno:
    Ringla je ukljucena/iskljucena
    Tip ringle: tip ringle
    Jacina: jacina
    Grejac: jacina grejaca kW
    Dole levo:
    Ringla je ukljucena/iskljucena
    Tip ringle: tip ringle
    Jacina: jacina
    Grejac: jacina grejaca kW
    Dole desno:
    Ringla je ukljucena/iskljucena
    Tip ringle: tip ringle
    Jacina: jacina
    Grejac: jacina grejaca kW
     */

    private String marka;
    private int garancija;
    private int maxRingle;
    private Ringla goreLevo;
    private Ringla goreDesno;
    private Ringla doleLevo;
    private Ringla doleDesno;

    public ElektricniSporet(String marka, int garancija, int maxRingle, Ringla goreLevo, Ringla goreDesno, Ringla doleLevo, Ringla doleDesno){
        this.marka = marka;
        this.garancija = garancija;
        this.maxRingle = maxRingle;
        this.goreLevo = goreLevo;
        this.goreDesno = goreDesno;
        this.doleLevo = doleLevo;
        this.doleDesno = doleDesno;
    }
    public String getMarka(String marka){
        return this.marka;
    }
    public int getGarancija(int garancija){
        return this.garancija;
    }
    public int getMaxRingle(int maxRingle){
        return this.maxRingle;
    }
    public Ringla getGoreLevo(Ringla goreLevo){
        return this.goreLevo;
    }
    public Ringla getGoreDesno(Ringla goreDesno){
        return this.goreDesno;
    }
    public Ringla getDoleLevo(Ringla doleLevo){
        return this.doleLevo;
    }
    public Ringla getDoleDesno(Ringla doleDesno){
        return this.doleDesno;
    }

    public void pojacaj(int pozicija){
        int counter = 0;
        ArrayList<Ringla> ringle = new ArrayList<>(Arrays.asList(goreLevo, goreDesno,doleLevo, doleDesno));

        for (int i = 0; i < ringle.size(); i++) {
            if(ringle.get(i).ukljucena())
                counter++;
        }
        if(pozicija == 1){
            this.goreLevo.pojacajRinglu();
            if(this.maxRingle <= counter){
                this.iskljuci(2);
                this.iskljuci(3);
                this.iskljuci(4);
            }
        }

        else if (pozicija == 2){

            this.goreDesno.pojacajRinglu();
            if(this.maxRingle <= counter){
                this.iskljuci(1);
                this.iskljuci(3);
                this.iskljuci(4);
            }
        }

        else if (pozicija == 3){
            this.doleLevo.pojacajRinglu();
            if(this.maxRingle <= counter){
                this.iskljuci(1);
                this.iskljuci(2);
                this.iskljuci(4);
            }
        }

        else if (pozicija == 4){
            this.doleDesno.pojacajRinglu();
            if(this.maxRingle <= counter){
                this.iskljuci(1);
                this.iskljuci(2);
                this.iskljuci(3);
            }
        }
    }
    public void iskljuci(int pozicija){
        if(pozicija == 1)
            this.goreLevo.iskljuciRinglu();
        else if (pozicija == 2)
            this.goreDesno.iskljuciRinglu();
        else if (pozicija == 3)
            this.doleLevo.iskljuciRinglu();
        else if (pozicija == 4)
            this.doleDesno.iskljuciRinglu();
    }
    public double ukupnaPotrosnja(int h){
        return this.goreLevo.potrosnja(h)+this.goreDesno.potrosnja(h)+this.doleLevo.potrosnja(h)+this.doleDesno.potrosnja(h);
    }

    public void print(){
        ArrayList<Ringla> ringle = new ArrayList<>(Arrays.asList(goreLevo, goreDesno,doleLevo, doleDesno));
        for (int i = 0; i < ringle.size(); i++) {
            ringle.get(i).print();
        }
    }
}
